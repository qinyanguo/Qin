###  指定Logger输出级别（INFO）,将数据写到哪些文件 当然这里有个提前
###  rootLogger里配置的level比如小于Threshold层级  否则无效 还是按照总的rootLogger里的level来输出，一般我们实际实用的话
###  rootLogger里配置DEBUG，然后某个文件专门存储ERRO日志，就配置下Threshold为ERROR，这个就是我们的最佳实践，不要乱七八糟瞎配置
log4j.rootLogger=INFO,Console,Logfile,Errorfile,Redis
log.console.name=./logs
###  把日志信息输出到控制台  DEBUG 级别
log4j.appender.Console=org.apache.log4j.ConsoleAppender
log4j.appender.Console.Target=System.out
log4j.appender.Console.layout=org.apache.log4j.PatternLayout
log4j.appender.Console.layout.ConversionPattern=[%d{yyyy-MM-dd HH:mm:ss}] [%p]%m-->>%c:%L%n
###  把日志信息写入文件  INFO 级别
log4j.appender.Logfile=org.apache.log4j.DailyRollingFileAppender
log4j.appender.Logfile.Threshold=INFO
log4j.appender.Logfile.File=${log.console.name}/log_info.log
log4j.appender.Logfile.encoding=UTF-8
log4j.appender.Logfile.Append=true
log4j.appender.Logfile.layout=org.apache.log4j.PatternLayout
log4j.appender.Logfile.layout.ConversionPattern=[%d{yyyy-MM-dd HH:mm:ss}] [%p]%m-->>%c:%L%n
###  把日志信息写入文件  ERROR 级别
log4j.appender.Errorfile=org.apache.log4j.DailyRollingFileAppender
log4j.appender.Errorfile.Threshold=INFO
log4j.appender.Errorfile.File=${log.console.name}/log_info.log
log4j.appender.Errorfile.encoding=UTF-8
log4j.appender.Errorfile.Append=true
log4j.appender.Errorfile.layout=org.apache.log4j.PatternLayout
log4j.appender.Errorfile.layout.ConversionPattern=[%d{yyyy-MM-dd HH:mm:ss}] [%p]%m-->>%c:%L%n
###写入redis
#log4j.appender.Redis=com.ryantenney.log4j.RedisAppender
#log4j.appender.Redis.host=192.168.1.129
#log4j.appender.Redis.port=6379
#log4j.appender.Redis.password=sysdba
#log4j.appender.Redis.key=logstash-wms
#log4j.appender.Redis.Threshold=ERROR
#log4j.appender.Redis.batchSize=1
#log4j.appender.Redis.purgeOnFailure=true
#log4j.appender.Redis.alwaysBatch=true
#log4j.appender.Redis.layout=net.logstash.log4j.JSONEventLayout
