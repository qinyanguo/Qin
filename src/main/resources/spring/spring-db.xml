<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/jdbc
        http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd
     	http://www.springframework.org/schema/tx
     	http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
     	http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">

	<!-- 引入属性文件 -->
    <context:property-placeholder location="classpath:META-INF/db.properties"
                                  system-properties-mode="NEVER" />
	 <!--<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">-->
		<!--<property name="locations" value="classpath:db.properties" />-->
     <!--</bean>-->

    <!-- 自动扫描 -->
    <context:annotation-config/>
    <context:component-scan base-package="com.ycmm.business.*"/>

    <!-- 配置连接池 -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
		init-method="init" destroy-method="close">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<!--<property name="driverClassName" value="com.mysql.jdbc.Driver" />-->
		<!--<property name="url" value="jdbc:mysql://192.168.1.125:3306/mgycmm" />-->
		<!--<property name="username" value="root" />-->
		<!--<property name="password" value="sysdba" />-->
	</bean>
	
	<!-- 配置Mybatis -->
	<bean id="v3SqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
	  <!-- 数据库引用 -->
	  <property name="dataSource" ref="dataSource"/>
	  <!-- 指定Mybatis配置文件xml的所在位置 -->
	  <property name="configLocation" value="classpath:/META-INF/mybatis-configuration.xml"/>
	  <!-- 如果 MyBatis 映射器 XML 文件在和映射器类相同的路径下不存在,那么另外一个需要 配置文件的原因就是它了。
	                  使用这个配置,有两种选择。第一是手动在 MyBatis 的 XML 配 置文件中使用<mappers>部分来指定类路径。第二是使用
	                  工厂 bean 的 mapperLocations 属 性。mapperLocations 属性使用一个资源位置的 list。 这个属性可以用来指定 MyBatis
	                   的 XML 映射器文件的位置 -->
        <property name="mapperLocations" value="classpath:/sqlMapper/*.xml"></property>
	</bean>

	<bean id="mapperScanner" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
	    <property name="basePackage" value="com.ycmm.business.mapper"/>
        <!--<property name="annotationClass" value="com.ycmm.base.mybatis.mapper.MybatisMapper"></property>-->
	    <property name="sqlSessionFactoryBeanName" value="v3SqlSessionFactory"/>
	</bean>

    <!--<bean class="tk.mybatis.spring.mapper.MapperScannerConfigurer">-->
        <!--<property name="basePackage" value="com.ycmm.business.*"/>-->
        <!--<property name="markerInterface" value="tk.mybatis.mapper.common.Mapper"/>-->
    <!--</bean>-->

</beans>










